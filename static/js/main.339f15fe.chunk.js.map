{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleDocumentKeyUp","event","setState","document","querySelector","innerHTML","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAiBEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAlB/B,uDAKE,WACkBI,SAASC,cAAc,iBAE/BC,UAAY,0BAEpBF,SAASG,iBAAiB,QAASC,KAAKP,uBAV5C,kCAaE,WACEG,SAASK,oBAAoB,QAASD,KAAKP,uBAd/C,oBAqBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,4CAAyDF,KAAKT,MAAMC,IAApE,aAxBR,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.339f15fe.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class App extends React.Component {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    const element = document.querySelector('.App__message') as HTMLElement;\n\n    element.innerHTML = 'Nothing was pressed yet';\n\n    document.addEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  handleDocumentKeyUp = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{`The last pressed key is [${this.state.key}]`}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}